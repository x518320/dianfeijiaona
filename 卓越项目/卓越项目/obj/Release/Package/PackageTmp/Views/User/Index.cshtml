@{
    ViewBag.Title = "首页";
    Layout = "~/Views/Shared/home.cshtml";
}

<link href="~/Content/animate.css" rel="stylesheet" />
<div class="container-fluid">
    <div class="container-fluid cm-container-white" style="background-color: white; margin: auto auto auto -1.2%; width: 102.5%;">
        <h2  style="margin-top: 0;">
            <a href="/Login/Index">@Session["login"]</a>
            <a href="#">欢迎您,@Session["name"]</a>
        </h2>
        @*图表*@
        <script src="~/Scripts/jquery-3.3.1.min.js"></script>
        <script type="text/javascript">
            // 图表数据
            var arrVisitors = new Array();
            $.ajax({
                url: "/User/tubiao",
                type: "get",
                async: false,
                success: function (data) {

                    var num = 0;
                    data.forEach((item) => {
                        var date = new Date(parseInt(item.date.replace("/Date(", "").replace(")/", ""), 10));
                        var num2 = date.getMonth()
                        if (num2 == 0) {
                            num2 = 12
                        }
                        var asd = num2 + "月, " + parseInt(item.money) + "";
                        arrVisitors[num] = asd;
                        num++;
                    })
                },
                error: function () {
                    alert("出错啦...")
                }
            })
            //arrVisitors[0] = "2007, 750";
            //arrVisitors[1] = "2008, 425";
            //arrVisitors[2] = "2009, 960";
            //arrVisitors[3] = "2010, 700";
            //arrVisitors[4] = "2011, 800";
            var canvas;
            var context;
            // 图表属性
            var cWidth, cHeight, cMargin, cSpace;
            var cMarginSpace, cMarginHeight;
            // 条形图属性
            var bWidth, bMargin, totalBars, maxDataValue;
            var bWidthMargin;
            // 条形动画
            var ctr, numctr, speed;
            // 轴属性
            var totLabelsOnYAxis;
            // 条形图构造函数
            window.onload = barChart;
            function barChart() {

                canvas = document.getElementById('bchart');
                if (canvas && canvas.getContext) {
                    context = canvas.getContext('2d');
                }
                chartSettings();
                drawAxisLabelMarkers();
                drawChartWithAnimation();
            }
            // 初始化图表和条形图值
            function chartSettings() {
                // 图表属性
                cMargin = 25;
                cSpace = 60;
                cHeight = canvas.height - 2 * cMargin - cSpace;
                cWidth = canvas.width - 2 * cMargin - cSpace;
                cMarginSpace = cMargin + cSpace;
                cMarginHeight = cMargin + cHeight;
                // 条形图属性
                bMargin = 15;
                totalBars = arrVisitors.length;
                bWidth = (cWidth / totalBars) - bMargin;
                //找到要在图表上绘制的最大值
                maxDataValue = 0;
                for (var i = 0; i < totalBars; i++) {
                    var arrVal = arrVisitors[i].split(",");
                    var barVal = parseInt(arrVal[1]);
                    if (parseInt(barVal) > parseInt(maxDataValue))
                        maxDataValue = barVal;
                }
                totLabelsOnYAxis = 10;
                context.font = "10pt Garamond";

                // 初始化动画变量
                ctr = 0;
                numctr = 100;
                speed = 10;
            }
            // 绘制图表轴、标签和标记
            function drawAxisLabelMarkers() {
                context.lineWidth = "2.0";
                // 绘制y轴
                drawAxis(cMarginSpace, cMarginHeight, cMarginSpace, cMargin);
                //绘制x轴
                drawAxis(cMarginSpace, cMarginHeight, cMarginSpace + cWidth, cMarginHeight);
                context.lineWidth = "1.0";
                drawMarkers();
            }
            //绘制X和Y轴
            function drawAxis(x, y, X, Y) {
                context.beginPath();
                context.moveTo(x, y);
                context.lineTo(X, Y);
                context.closePath();
                context.stroke();
            }
            //在X和Y轴上绘制图表标记
            function drawMarkers() {
                var numMarkers = parseInt(maxDataValue / totLabelsOnYAxis);
                context.textAlign = "right";
                context.fillStyle = "#000";;
                //y轴
                for (var i = 0; i <= totLabelsOnYAxis; i++) {
                    markerVal = i * numMarkers;
                    markerValHt = i * numMarkers * cHeight;
                    var xMarkers = cMarginSpace - 5;
                    var yMarkers = cMarginHeight - (markerValHt / maxDataValue);
                    context.fillText(markerVal, xMarkers, yMarkers, cSpace);
                }
                //X轴
                context.textAlign = 'center';
                for (var i = 0; i < totalBars; i++) {
                    arrval = arrVisitors[i].split(",");
                    name = arrval[0];
                    markerXPos = cMarginSpace + bMargin
                        + (i * (bWidth + bMargin)) + (bWidth / 2);
                    markerYPos = cMarginHeight + 15; //X轴文字位置
                    context.fillText(name, markerXPos, markerYPos, bWidth);
                }
                context.save();
                //添加Y轴标题
                context.translate(cMargin + 10, cHeight / 2);
                context.rotate(Math.PI * -90 / 180);
                context.fillText('单位(元)', 0, 0);
                context.restore();
                //添加X轴标题
                context.fillText('最近五月消费', cMarginSpace +
                    (cWidth / 2), cMarginHeight + 30);
            }
            function drawChartWithAnimation() {
                //循环遍历总条并绘制
                for (var i = 0; i < totalBars; i++) {
                    var arrVal = arrVisitors[i].split(",");
                    bVal = parseInt(arrVal[1]);
                    bHt = (bVal * cHeight / maxDataValue) / numctr * ctr;
                    bX = cMarginSpace + (i * (bWidth + bMargin)) + bMargin;
                    bY = cMarginHeight - bHt - 2;
                    drawRectangle(bX, bY, bWidth, bHt, true);
                }
                // 超时运行并检查是否已达到条
                // 所需高度；如果不是，则继续增长
                if (ctr < numctr) {
                    ctr = ctr + 1;
                    setTimeout(arguments.callee, speed);
                }
            }
            function drawRectangle(x, y, w, h, fill) {
                context.beginPath();
                context.rect(x, y, w, h);
                context.closePath();
                context.stroke();
                if (fill) {
                    var gradient = context.createLinearGradient(0, 0, 0, 300);

                    gradient.addColorStop(0, '#52E5E7');
                    //gradient.addColorStop(1, 'rgba(67,203,36,.15)');
                    gradient.addColorStop(1, '#130C17');
                    context.fillStyle = gradient;
                    context.strokeStyle = gradient;
                    context.fill();
                }
            }
        </script>
        <script src="~/Scripts/图/echarts.min.js"></script>
        <div style="display:flex;">
            <ul style="flex:1;list-style:none;">
                <li>
                    <canvas id="bchart" height="400" width="400">
                        您的浏览器不支持HTML5 Canvas
                    </canvas>
                </li>
                <li >
                    <a href="~/User/order">查看详情>>></a>
                </li>
            </ul>

            <ul style="flex: 1; list-style: none;">
                <li>
                    <div id="main" style="width: 400px;height:400px;"></div>
                </li>
                <li >
                    <a href="~/User/chongzhi">查看详情>>></a>
                </li>
            </ul>

        </div>

        <script type="text/javascript">
            // 基于准备好的dom，初始化echarts实例
            var myChart = echarts.init(document.getElementById('main'));

            var aa = new Array();

            $.ajax({
                url: "/User/tubiao2",
                type: "get",
                async: false,
                success: function (data) {
                    data.forEach((item2) => {
                        var dd = { value: item2.money, name: '账户余额' }
                        aa.push(dd)
                    })
                },
                error: function () {
                    alert("出错啦...")
                }
            })

            // 指定图表的配置项和数据
            var option = {
                tooltip: {
                    trigger: 'item'
                },
                legend: {
                    top: '5%',
                    left: 'center'
                },
                series: [
                    {
                        name: '账户信息',
                        type: 'pie',
                        radius: ['40%', '70%'],
                        avoidLabelOverlap: false,
                        itemStyle: {
                            borderRadius: 10,
                            borderColor: '#fff',
                            borderWidth: 2
                        },
                        label: {
                            show: false,
                            position: 'center'
                        },
                        emphasis: {
                            label: {
                                show: true,
                                fontSize: '40',
                                fontWeight: 'bold'
                            }
                        },
                        labelLine: {
                            show: false
                        },
                        data: [
                            aa[0],
                            { value: @ViewBag.nowmoney , name: '本月消费' },

                        ]
                    }
                ]
            };
            // 使用刚指定的配置项和数据显示图表。
            myChart.setOption(option);
        </script>

   
    </div>
</div>


